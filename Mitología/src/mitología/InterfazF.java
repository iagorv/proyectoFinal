/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mitología;

import java.awt.CardLayout;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author a22iagorg
 */
public class InterfazF extends javax.swing.JFrame {

    /**
     * Creates new form prueba
     */
    public InterfazF() {
        initComponents();
    }

    private void cambiarCard(String card) {
        CardLayout cardL = (CardLayout) panelPrincipal.getLayout();
        cardL.show(panelPrincipal, card);
    }

    DAO mitologia = new DAO("localhost", 3306, "mitologiabd", "root", "root");

    public void mostrarDiosesSeleccionados() {
        String diosesSeleccionados = "";
        boolean griegaSeleccionada = Griega.isSelected();
        boolean egipciaSeleccionada = Egipcia.isSelected();
        boolean nórdicaSeleccionada = Nórdica.isSelected();
        boolean japonesaSeleccionada = Japonesa.isSelected();
        boolean mayaSeleccionada = Maya.isSelected();
        boolean hindúSeleccionada = Hindú.isSelected();
        boolean chinaSeleccionada = China.isSelected();
        boolean babilónicaSeleccionada = Babilónica.isSelected();
        boolean yorubaSeleccionada = Yoruba.isSelected();
        boolean eslavaSeleccionada = Eslava.isSelected();
        boolean polinesiaSeleccionada = Polinesia.isSelected();
        boolean celtaSeleccionada = Celta.isSelected();

        diosesSeleccionados = mitologia.getDiosesSeleccionadosMitologias(griegaSeleccionada,
                egipciaSeleccionada, nórdicaSeleccionada, japonesaSeleccionada, mayaSeleccionada,
                hindúSeleccionada, chinaSeleccionada, babilónicaSeleccionada,
                yorubaSeleccionada, eslavaSeleccionada, polinesiaSeleccionada, celtaSeleccionada);

        textoDioses.setText(diosesSeleccionados);

    }

    public void mostrarMitosSeleccionados() {
        String mitosSeleccionados = "";
        boolean griegaSeleccionada = Griega.isSelected();
        boolean egipciaSeleccionada = Egipcia.isSelected();
        boolean nórdicaSeleccionada = Nórdica.isSelected();
        boolean japonesaSeleccionada = Japonesa.isSelected();
        boolean mayaSeleccionada = Maya.isSelected();
        boolean hindúSeleccionada = Hindú.isSelected();
        boolean chinaSeleccionada = China.isSelected();
        boolean babilónicaSeleccionada = Babilónica.isSelected();
        boolean yorubaSeleccionada = Yoruba.isSelected();
        boolean eslavaSeleccionada = Eslava.isSelected();
        boolean polinesiaSeleccionada = Polinesia.isSelected();
        boolean celtaSeleccionada = Celta.isSelected();

        mitosSeleccionados = mitologia.getMitosSeleccionadosMitologia(griegaSeleccionada,
                egipciaSeleccionada, nórdicaSeleccionada, japonesaSeleccionada, mayaSeleccionada,
                hindúSeleccionada, chinaSeleccionada, babilónicaSeleccionada,
                yorubaSeleccionada, eslavaSeleccionada, polinesiaSeleccionada, celtaSeleccionada);

        textoMitos.setText(mitosSeleccionados);
    }

    public void mostrarDatosDios() {

        String nombreDios = meterNombreDiosInformación.getText();
        if(mitologia.comprobarNombre(nombreDios)=="El dios no está en la base de datos"){
             String datos = mitologia.comprobarNombre(nombreDios);
             textoInformacionDios.setText(datos);
        }
        else{
        String datos = mitologia.getInformacionDios(nombreDios);
        textoInformacionDios.setText(datos);
        }//cambiar TextArea textoInformacionDios por un jLabel

    }

    public void MostrarMito() {
        String nombreMito = meterNombreMito.getText();
        String informacionMito = mitologia.getinformacionMito(nombreMito);
        labelMitosDescripcion.setText("<html>" + informacionMito.replaceAll("\n", "<br>") + "</html>");

    }

    public void conseguirAñadirDios() {
        String nombreDiosAñadir = nombreMeterDios.getText();
        String deidadAñadir = deidadMeterDios.getText();
        String nombrePadreAñadir = nombreMeterPadre.getText();
        String nombreMadreAñadir = nombreMeterMadre.getText();
        String mitologiaDiosAñadir = seleccionarMitologíaMeterDios.getSelectedItem().toString();

        mitologia.AñadirDios(mitologiaDiosAñadir, nombreDiosAñadir,
                deidadAñadir, nombrePadreAñadir, nombreMadreAñadir);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        PanelInicio = new javax.swing.JPanel();
        botonIrMitologia = new javax.swing.JButton();
        irMeterDios = new javax.swing.JButton();
        BotonIrInformacionDioses = new javax.swing.JButton();
        BotonIrInformacionMito = new javax.swing.JButton();
        PanelMitologia = new javax.swing.JPanel();
        tituloMitos = new javax.swing.JLabel();
        Nórdica = new javax.swing.JCheckBox();
        textoDioses = new javax.swing.JLabel();
        Japonesa = new javax.swing.JCheckBox();
        textoMitos = new javax.swing.JLabel();
        Maya = new javax.swing.JCheckBox();
        Hindú = new javax.swing.JCheckBox();
        botonParaQueAparezcan = new javax.swing.JButton();
        China = new javax.swing.JCheckBox();
        Babilónica = new javax.swing.JCheckBox();
        Eslava = new javax.swing.JCheckBox();
        Griega = new javax.swing.JCheckBox();
        Polinesia = new javax.swing.JCheckBox();
        Yoruba = new javax.swing.JCheckBox();
        Celta = new javax.swing.JCheckBox();
        tituloDioses = new javax.swing.JLabel();
        Egipcia = new javax.swing.JCheckBox();
        BotonVlverPanelIncial = new javax.swing.JButton();
        PanelAñadirDios = new javax.swing.JPanel();
        seleccionarMitologíaMeterDios = new javax.swing.JComboBox<>();
        nombreMeterDios = new javax.swing.JTextField();
        deidadMeterDios = new javax.swing.JTextField();
        botonIrPanelPrincipal = new javax.swing.JButton();
        nombreMeterPadre = new javax.swing.JTextField();
        nombreMeterMadre = new javax.swing.JTextField();
        añadirDios = new javax.swing.JButton();
        verInformacionDios = new javax.swing.JPanel();
        meterNombreDiosInformación = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoInformacionDios = new javax.swing.JTextArea();
        enseñarInformacionDios = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        verInformacionMitos = new javax.swing.JPanel();
        BotonIrPanelPrincipal = new javax.swing.JButton();
        meterNombreMito = new javax.swing.JTextField();
        botonVerMito = new javax.swing.JButton();
        labelMitosDescripcion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setLayout(new java.awt.CardLayout());

        botonIrMitologia.setText("Ir panel Mitologia");
        botonIrMitologia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIrMitologiaActionPerformed(evt);
            }
        });

        irMeterDios.setText("Ir a panel meter dios");
        irMeterDios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irMeterDiosActionPerformed(evt);
            }
        });

        BotonIrInformacionDioses.setText("Ir a panel infromacion dioses");
        BotonIrInformacionDioses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIrInformacionDiosesActionPerformed(evt);
            }
        });

        BotonIrInformacionMito.setText("Ir a panel informacion mito");
        BotonIrInformacionMito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIrInformacionMitoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelInicioLayout = new javax.swing.GroupLayout(PanelInicio);
        PanelInicio.setLayout(PanelInicioLayout);
        PanelInicioLayout.setHorizontalGroup(
            PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInicioLayout.createSequentialGroup()
                .addGroup(PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInicioLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(botonIrMitologia)
                        .addGap(74, 74, 74)
                        .addComponent(irMeterDios)
                        .addGap(104, 104, 104)
                        .addComponent(BotonIrInformacionDioses))
                    .addGroup(PanelInicioLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(BotonIrInformacionMito)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        PanelInicioLayout.setVerticalGroup(
            PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInicioLayout.createSequentialGroup()
                .addGroup(PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInicioLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(irMeterDios)
                            .addComponent(BotonIrInformacionDioses)))
                    .addGroup(PanelInicioLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(botonIrMitologia)))
                .addGap(41, 41, 41)
                .addComponent(BotonIrInformacionMito)
                .addContainerGap(568, Short.MAX_VALUE))
        );

        panelPrincipal.add(PanelInicio, "card2");

        tituloMitos.setText("Mitos");

        Nórdica.setText("Japonesa");
        Nórdica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NórdicaActionPerformed(evt);
            }
        });

        textoDioses.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoDioses.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        Japonesa.setText("Nórdica");
        Japonesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JaponesaActionPerformed(evt);
            }
        });

        textoMitos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoMitos.setToolTipText("");
        textoMitos.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        Maya.setText("Hindú");

        Hindú.setText("Maya");

        botonParaQueAparezcan.setText("Buscar");
        botonParaQueAparezcan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonParaQueAparezcanActionPerformed(evt);
            }
        });

        China.setText("Babilónica");

        Babilónica.setText("Eslava");
        Babilónica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BabilónicaActionPerformed(evt);
            }
        });

        Eslava.setText("Celta");

        Griega.setText("Griega");
        Griega.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 0, 255), new java.awt.Color(204, 255, 51), new java.awt.Color(255, 0, 102), new java.awt.Color(255, 51, 51)));
        Griega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GriegaActionPerformed(evt);
            }
        });

        Polinesia.setText("Polinesia");

        Yoruba.setText("Yoruba");

        Celta.setText("China");

        tituloDioses.setText("Dioses");

        Egipcia.setText("Egipcia");

        BotonVlverPanelIncial.setBackground(new java.awt.Color(255, 153, 153));
        BotonVlverPanelIncial.setForeground(new java.awt.Color(0, 0, 0));
        BotonVlverPanelIncial.setText("Volver a panel inicial");
        BotonVlverPanelIncial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVlverPanelIncialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMitologiaLayout = new javax.swing.GroupLayout(PanelMitologia);
        PanelMitologia.setLayout(PanelMitologiaLayout);
        PanelMitologiaLayout.setHorizontalGroup(
            PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMitologiaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(China)
                        .addGroup(PanelMitologiaLayout.createSequentialGroup()
                            .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Hindú)
                                .addComponent(Nórdica)
                                .addComponent(Maya))
                            .addGap(6, 6, 6))
                        .addComponent(Celta, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Yoruba, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Babilónica, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Polinesia, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Eslava, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(PanelMitologiaLayout.createSequentialGroup()
                        .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Japonesa)
                            .addComponent(Egipcia)
                            .addComponent(Griega)
                            .addComponent(botonParaQueAparezcan))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelMitologiaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(textoDioses, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(textoMitos, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(PanelMitologiaLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(tituloDioses)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                        .addComponent(tituloMitos)
                        .addGap(174, 174, 174))))
            .addGroup(PanelMitologiaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(BotonVlverPanelIncial)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelMitologiaLayout.setVerticalGroup(
            PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMitologiaLayout.createSequentialGroup()
                .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMitologiaLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tituloDioses)
                            .addComponent(tituloMitos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelMitologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoDioses, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
                            .addComponent(textoMitos, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)))
                    .addGroup(PanelMitologiaLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(BotonVlverPanelIncial)
                        .addGap(26, 26, 26)
                        .addComponent(Griega)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Egipcia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Japonesa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nórdica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hindú)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Maya)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Celta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(China)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Yoruba)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Babilónica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Polinesia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Eslava)
                        .addGap(47, 47, 47)
                        .addComponent(botonParaQueAparezcan)))
                .addContainerGap())
        );

        panelPrincipal.add(PanelMitologia, "card3");

        seleccionarMitologíaMeterDios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Griega", "Egipcia", "Nórdica", "Japonesa", "Maya", "Hindú", "China", "Babilónica", "Yoruba", "Eslava", "Polinesia", "Celta" }));

        nombreMeterDios.setText("Nombre del dios");
        nombreMeterDios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreMeterDiosActionPerformed(evt);
            }
        });

        deidadMeterDios.setText("Deidad...");
        deidadMeterDios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deidadMeterDiosActionPerformed(evt);
            }
        });

        botonIrPanelPrincipal.setText("Volver al panel inicial");
        botonIrPanelPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIrPanelPrincipalActionPerformed(evt);
            }
        });

        nombreMeterPadre.setText("Padre");

        nombreMeterMadre.setText("Madre");

        añadirDios.setText("Añadir");
        añadirDios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirDiosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelAñadirDiosLayout = new javax.swing.GroupLayout(PanelAñadirDios);
        PanelAñadirDios.setLayout(PanelAñadirDiosLayout);
        PanelAñadirDiosLayout.setHorizontalGroup(
            PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                            .addComponent(botonIrPanelPrincipal)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                            .addGroup(PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(seleccionarMitologíaMeterDios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nombreMeterPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                            .addGroup(PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                                    .addComponent(nombreMeterDios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(78, 78, 78)
                                    .addComponent(deidadMeterDios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(nombreMeterMadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(266, Short.MAX_VALUE)))
                    .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                        .addComponent(añadirDios)
                        .addContainerGap(616, Short.MAX_VALUE))))
        );
        PanelAñadirDiosLayout.setVerticalGroup(
            PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAñadirDiosLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(botonIrPanelPrincipal)
                .addGap(44, 44, 44)
                .addGroup(PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seleccionarMitologíaMeterDios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreMeterDios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deidadMeterDios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(PanelAñadirDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreMeterPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreMeterMadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104)
                .addComponent(añadirDios)
                .addContainerGap(377, Short.MAX_VALUE))
        );

        panelPrincipal.add(PanelAñadirDios, "card4");

        meterNombreDiosInformación.setText("nombre del dios");
        meterNombreDiosInformación.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meterNombreDiosInformaciónActionPerformed(evt);
            }
        });

        textoInformacionDios.setColumns(20);
        textoInformacionDios.setLineWrap(true);
        textoInformacionDios.setRows(5);
        jScrollPane1.setViewportView(textoInformacionDios);

        enseñarInformacionDios.setText("EnseñarInformacion");
        enseñarInformacionDios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enseñarInformacionDiosActionPerformed(evt);
            }
        });

        jButton4.setText("volver a panel inicio");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout verInformacionDiosLayout = new javax.swing.GroupLayout(verInformacionDios);
        verInformacionDios.setLayout(verInformacionDiosLayout);
        verInformacionDiosLayout.setHorizontalGroup(
            verInformacionDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verInformacionDiosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(verInformacionDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(verInformacionDiosLayout.createSequentialGroup()
                        .addGroup(verInformacionDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4)
                            .addComponent(meterNombreDiosInformación, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103)
                        .addComponent(enseñarInformacionDios)
                        .addGap(0, 345, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        verInformacionDiosLayout.setVerticalGroup(
            verInformacionDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verInformacionDiosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addGap(26, 26, 26)
                .addGroup(verInformacionDiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meterNombreDiosInformación, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enseñarInformacionDios))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        panelPrincipal.add(verInformacionDios, "card5");

        BotonIrPanelPrincipal.setText("Ir panel principal");
        BotonIrPanelPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIrPanelPrincipalActionPerformed(evt);
            }
        });

        meterNombreMito.setText("Nombre del mito");

        botonVerMito.setText("Mostrar Mito");
        botonVerMito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerMitoActionPerformed(evt);
            }
        });

        labelMitosDescripcion.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout verInformacionMitosLayout = new javax.swing.GroupLayout(verInformacionMitos);
        verInformacionMitos.setLayout(verInformacionMitosLayout);
        verInformacionMitosLayout.setHorizontalGroup(
            verInformacionMitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verInformacionMitosLayout.createSequentialGroup()
                .addGroup(verInformacionMitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(verInformacionMitosLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(meterNombreMito, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(botonVerMito))
                    .addGroup(verInformacionMitosLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(verInformacionMitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMitosDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonIrPanelPrincipal))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        verInformacionMitosLayout.setVerticalGroup(
            verInformacionMitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verInformacionMitosLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(BotonIrPanelPrincipal)
                .addGap(51, 51, 51)
                .addGroup(verInformacionMitosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meterNombreMito, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonVerMito))
                .addGap(50, 50, 50)
                .addComponent(labelMitosDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        panelPrincipal.add(verInformacionMitos, "card6");

        getContentPane().add(panelPrincipal, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonIrMitologiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIrMitologiaActionPerformed
        cambiarCard("card3");
    }//GEN-LAST:event_botonIrMitologiaActionPerformed

    private void NórdicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NórdicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NórdicaActionPerformed

    private void JaponesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JaponesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JaponesaActionPerformed

    private void botonParaQueAparezcanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonParaQueAparezcanActionPerformed
        mostrarDiosesSeleccionados();
        mostrarMitosSeleccionados();
        // TODO add your handling code here:
    }//GEN-LAST:event_botonParaQueAparezcanActionPerformed

    private void BabilónicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BabilónicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BabilónicaActionPerformed

    private void GriegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GriegaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GriegaActionPerformed

    private void BotonVlverPanelIncialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVlverPanelIncialActionPerformed
        cambiarCard("card2");        // TODO add your handling code here:
    }//GEN-LAST:event_BotonVlverPanelIncialActionPerformed

    private void nombreMeterDiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreMeterDiosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreMeterDiosActionPerformed

    private void deidadMeterDiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deidadMeterDiosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deidadMeterDiosActionPerformed

    private void irMeterDiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irMeterDiosActionPerformed
        cambiarCard("card4");        // TODO add your handling code here:
    }//GEN-LAST:event_irMeterDiosActionPerformed

    private void botonIrPanelPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIrPanelPrincipalActionPerformed
        cambiarCard("card2");        // TODO add your handling code here:
    }//GEN-LAST:event_botonIrPanelPrincipalActionPerformed

    private void meterNombreDiosInformaciónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meterNombreDiosInformaciónActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_meterNombreDiosInformaciónActionPerformed

    private void enseñarInformacionDiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enseñarInformacionDiosActionPerformed
        mostrarDatosDios();        // TODO add your handling code here:
    }//GEN-LAST:event_enseñarInformacionDiosActionPerformed

    private void BotonIrInformacionDiosesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIrInformacionDiosesActionPerformed
        cambiarCard("card5");        // TODO add your handling code here:
    }//GEN-LAST:event_BotonIrInformacionDiosesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        cambiarCard("card2");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void BotonIrInformacionMitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIrInformacionMitoActionPerformed
        cambiarCard("card6");        // TODO add your handling code here:
    }//GEN-LAST:event_BotonIrInformacionMitoActionPerformed

    private void BotonIrPanelPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIrPanelPrincipalActionPerformed
        cambiarCard("card2");        // TODO add your handling code here:
    }//GEN-LAST:event_BotonIrPanelPrincipalActionPerformed

    private void añadirDiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirDiosActionPerformed
        conseguirAñadirDios();        // TODO add your handling code here:
    }//GEN-LAST:event_añadirDiosActionPerformed

    private void botonVerMitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerMitoActionPerformed
MostrarMito();        // TODO add your handling code here:
    }//GEN-LAST:event_botonVerMitoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Babilónica;
    private javax.swing.JButton BotonIrInformacionDioses;
    private javax.swing.JButton BotonIrInformacionMito;
    private javax.swing.JButton BotonIrPanelPrincipal;
    private javax.swing.JButton BotonVlverPanelIncial;
    private javax.swing.JCheckBox Celta;
    private javax.swing.JCheckBox China;
    private javax.swing.JCheckBox Egipcia;
    private javax.swing.JCheckBox Eslava;
    private javax.swing.JCheckBox Griega;
    private javax.swing.JCheckBox Hindú;
    private javax.swing.JCheckBox Japonesa;
    private javax.swing.JCheckBox Maya;
    private javax.swing.JCheckBox Nórdica;
    private javax.swing.JPanel PanelAñadirDios;
    private javax.swing.JPanel PanelInicio;
    private javax.swing.JPanel PanelMitologia;
    private javax.swing.JCheckBox Polinesia;
    private javax.swing.JCheckBox Yoruba;
    private javax.swing.JButton añadirDios;
    private javax.swing.JButton botonIrMitologia;
    private javax.swing.JButton botonIrPanelPrincipal;
    private javax.swing.JButton botonParaQueAparezcan;
    private javax.swing.JButton botonVerMito;
    private javax.swing.JTextField deidadMeterDios;
    private javax.swing.JButton enseñarInformacionDios;
    private javax.swing.JButton irMeterDios;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelMitosDescripcion;
    private javax.swing.JTextField meterNombreDiosInformación;
    private javax.swing.JTextField meterNombreMito;
    private javax.swing.JTextField nombreMeterDios;
    private javax.swing.JTextField nombreMeterMadre;
    private javax.swing.JTextField nombreMeterPadre;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JComboBox<String> seleccionarMitologíaMeterDios;
    private javax.swing.JLabel textoDioses;
    private javax.swing.JTextArea textoInformacionDios;
    private javax.swing.JLabel textoMitos;
    private javax.swing.JLabel tituloDioses;
    private javax.swing.JLabel tituloMitos;
    private javax.swing.JPanel verInformacionDios;
    private javax.swing.JPanel verInformacionMitos;
    // End of variables declaration//GEN-END:variables
}
